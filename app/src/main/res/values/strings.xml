<resources>
    <string name="app_name">Ping</string>

    <!-- GENERAL -->
    <string name="yes">Yes</string>
    <string name="no">No</string>
    <!-- Hub connection -->
    <string name="couldnt_connect_to_hub">Can\'t reach the Ping services, please check your internet connection and try again.</string>
    <string name="retry">Retry</string>

    <!-- Get started & Register pages -->
    <string name="get_started_desc">You\'ll receive an activation code upon proceeding - make sure this number can receive SMS.</string>
    <string name="phone_number">Phone number</string>
    <string name="calling_code">Calling code</string>
    <string name="get_started">Get started</string>

    <string name="register">Register</string>
    <string name="first_name">First name</string>
    <string name="last_name">Last name</string>

    <!-- Request permission to read contacts -->
    <string name="contacts_permission_rationale_title">Contacts</string>
    <string name="contacts_permission_rationale_body">
        Would you like to automatically add your contacts and check who\'s already using Ping Chat?
        If not, you\'ll have to manually add contacts to your Ping contact-book.
    </string>

    <!-- Dummy (delete) -->
    <string name="dummy_scrollable_text">
        A socket is a standard way to perform network communication through the
        OS. A socket can be thought of as an endpoint to a connection, like a socket
        on an operator’s switchboard. But these sockets are just a programmer’s
        abstraction that takes care of all the nitty-gritty details of the OSI model
        described above. To the programmer, a socket can be used to send or receive
        data over a network. This data is transmitted at the session layer (5), above
        the lower layers (handled by the operating system), which take care of
        routing. There are several different types of sockets that determine the
        structure of the transport layer (4). The most common types are stream
        sockets and datagram sockets.
        Stream sockets provide reliable two-way communication similar to when
        you call someone on the phone. One side initiates the connection to the
        other, and after the connection is established, either side can communicate
        to the other. In addition, there is immediate confirmation that what you said
        actually reached its destination. Stream sockets use a standard communication protocol called Transmission Control Protocol (TCP), which exists on
        the transport layer (4) of the OSI model. On computer networks, data is
        usually transmitted in chunks called packets. TCP is designed so that the
        packets of data will arrive without errors and in sequence, like words
        arriving at the other end in the order they were spoken when you are
        talking on the telephone. Webservers, mail servers, and their respective
        client applications all use TCP and stream sockets to communicate.
    </string>

</resources>
